{"ast":null,"code":"var _jsxFileName = \"/Users/tonylin/Downloads/contentgen-takehome-master/frontend/src/components/ContentType.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentType = ({\n  selectedContentTypes,\n  onContentTypeChange\n}) => {\n  // Available content types\n  const contentTypes = [{\n    id: 'product_description',\n    name: 'Product Description',\n    description: 'Detailed and compelling product description'\n  }, {\n    id: 'seo',\n    name: 'SEO Content',\n    description: 'SEO-optimized title and meta description'\n  }, {\n    id: 'marketing_email',\n    name: 'Marketing Email',\n    description: 'Email marketing copy with subject line and body'\n  }, {\n    id: 'social_media',\n    name: 'Social Media',\n    description: 'Posts for various social media platforms'\n  }, {\n    id: 'missing_fields',\n    name: 'Missing Fields',\n    description: 'Generate any missing product information'\n  }, {\n    id: 'product_image',\n    name: 'Product Image',\n    description: 'Generate product image based on attributes'\n  }];\n\n  // Handle content type checkbox change\n  const handleContentTypeChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    if (checked) {\n      // Add to selected types\n      onContentTypeChange([...selectedContentTypes, value]);\n    } else {\n      // Remove from selected types\n      onContentTypeChange(selectedContentTypes.filter(type => type !== value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-type-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Content Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select the type of content you want to generate:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-type-options\",\n      children: contentTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-type-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: type.id,\n            checked: selectedContentTypes.includes(type.id),\n            onChange: handleContentTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-type-name\",\n            children: type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"content-type-description\",\n          children: type.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, type.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = ContentType;\nexport default ContentType;\nvar _c;\n$RefreshReg$(_c, \"ContentType\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ContentType","selectedContentTypes","onContentTypeChange","contentTypes","id","name","description","handleContentTypeChange","e","value","checked","target","filter","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","includes","onChange","_c","$RefreshReg$"],"sources":["/Users/tonylin/Downloads/contentgen-takehome-master/frontend/src/components/ContentType.js"],"sourcesContent":["import React from 'react';\n\nconst ContentType = ({ selectedContentTypes, onContentTypeChange }) => {\n  // Available content types\n  const contentTypes = [\n    {\n      id: 'product_description',\n      name: 'Product Description',\n      description: 'Detailed and compelling product description'\n    },\n    {\n      id: 'seo',\n      name: 'SEO Content',\n      description: 'SEO-optimized title and meta description'\n    },\n    {\n      id: 'marketing_email',\n      name: 'Marketing Email',\n      description: 'Email marketing copy with subject line and body'\n    },\n    {\n      id: 'social_media',\n      name: 'Social Media',\n      description: 'Posts for various social media platforms'\n    },\n    {\n      id: 'missing_fields',\n      name: 'Missing Fields',\n      description: 'Generate any missing product information'\n    },\n    {\n      id: 'product_image',\n      name: 'Product Image',\n      description: 'Generate product image based on attributes'\n    }\n  ];\n  \n  // Handle content type checkbox change\n  const handleContentTypeChange = (e) => {\n    const { value, checked } = e.target;\n    \n    if (checked) {\n      // Add to selected types\n      onContentTypeChange([...selectedContentTypes, value]);\n    } else {\n      // Remove from selected types\n      onContentTypeChange(selectedContentTypes.filter(type => type !== value));\n    }\n  };\n  \n  return (\n    <div className=\"content-type-container\">\n      <h2>Content Type</h2>\n      <p>Select the type of content you want to generate:</p>\n      \n      <div className=\"content-type-options\">\n        {contentTypes.map(type => (\n          <div key={type.id} className=\"content-type-option\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                value={type.id}\n                checked={selectedContentTypes.includes(type.id)}\n                onChange={handleContentTypeChange}\n              />\n              <span className=\"content-type-name\">{type.name}</span>\n            </label>\n            <p className=\"content-type-description\">{type.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentType;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}